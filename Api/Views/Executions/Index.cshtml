@model IEnumerable<Execution>
@{
    ViewData["Title"] = "Executions";
}

<div class="p-4">
    <div class="card">
        <div class="card-header bg-blueberry">
            <div class="d-flex justify-content-between">
                <h5 class="h5 mb-2 mt-2"><i class="fa fa-clipboard-check"></i> @ViewBag.Title</h5>
                <div class="btn-toolbar mb-2 mb-md-0">
                    <div class="btn-group btn-sm">
                        <a asp-controller="Home" asp-action="Index" class="btn btn-storm"><i class="fa fa-backward"></i> Go back</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body">
            <table id="table" class="table table-sm table-bordered table-striped" cellspacing="0" width="100%">
                <thead class="thead-grass">
                    <tr>
                        <th></th>
                        <th>@Html.DisplayNameFor(execution => execution.TestCase.Name)</th>
                        <th>@Html.DisplayNameFor(execution => execution.ExecutionDate)</th>
                        <th>@Html.DisplayNameFor(execution => execution.TestEnvironment)</th>
                        <th>@Html.DisplayNameFor(execution => execution.User.DisplayName)</th>
                        <th>@Html.DisplayNameFor(execution => execution.User.Company.Name)</th>
                        <th>Role</th>
                        <th>@Html.DisplayNameFor(execution => execution.ExecutionStatus)</th>
                        <th></th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th></th>
                        <th>@Html.DisplayNameFor(execution => execution.TestCase.Name)</th>
                        <th>@Html.DisplayNameFor(execution => execution.ExecutionDate)</th>
                        <th>@Html.DisplayNameFor(execution => execution.TestEnvironment)</th>
                        <th>@Html.DisplayNameFor(execution => execution.User.DisplayName)</th>
                        <th>@Html.DisplayNameFor(execution => execution.User.Company.Name)</th>
                        <th>Role</th>
                        <th>@Html.DisplayNameFor(execution => execution.ExecutionStatus)</th>
                        <th></th>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>

<div class="modal fade" id="detailsModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-fullscreen" role="document">
        @await Html.PartialAsync("_Details")
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            List('@ViewBag.Title', '@ViewBag.TestCase.TestCaseId');
        });

        var customSwal = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-confirm',
                cancelButton: 'btn btn-mist'
            },
            buttonsStyling: false,
            showCloseButton: true,
            confirmButtonText: '<i class="fa fa-check"></i> OK',
        });

        const find = (array, id) => {
            var result;

            array.some(x => result = x.id === id ? x : find(x.children || [], id));

            return result;
        }
    </script>
    <script src="~/js/catalogs.min.js" asp-append-version="true"></script>
    <script src="~/js/executions/list.min.js" asp-append-version="true"></script>
    <script src="~/js/executions/get.min.js" asp-append-version="true"></script>
}